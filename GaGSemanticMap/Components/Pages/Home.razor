@page "/"
@rendermode InteractiveServer
@inject ISemanticSearchService _semanticService

<PageTitle>Home</PageTitle>

<h2>Type your question here: </h2>


<!-- ensure that UserInput is updated before onkeyup is triggered to get the text-->
<input @bind-value="UserInput" @bind-value:event="oninput" @onkeyup="OnEnter" />

<button class="btn btn-primary" @onclick="GetEmbeddings" tabindex="0">Go!</button>

<h3>Chat: </h3>
@foreach(var outputText in outputTexts)
{
	<p>@outputText</p>
}



@code{

	public string? UserInput { get; set; }
	private List<string> outputTexts = new List<string>();

	private async Task GetEmbeddings()
	{
		if(!string.IsNullOrEmpty(UserInput))
		{
			outputTexts.Add($"User: {UserInput}");

			await _semanticService.GetEventsBySemanticRelevanceAsync(UserInput);
		}
	}

	private async Task GetResponse()
	{
		if(!string.IsNullOrEmpty(UserInput))
		{
			outputTexts.Add($"User: {UserInput}");

			var response = await _semanticService.GetOpenAIResponseAsync(UserInput);

			outputTexts.Add($"Bot: {response}");
		}
	}

	private async Task OnEnter(KeyboardEventArgs e)
	{
		if (e.Code == "Enter" || e.Code == "NumpadEnter")
		{
			await GetEmbeddings();
			//await GetResponse();
		}
	}

}